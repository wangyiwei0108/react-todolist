{"version":3,"sources":["components/ExampleData.js","components/Form.js","components/Errand.js","components/ErrandList.js","components/App.js","index.js"],"names":["exampleData","text","completed","id","stars","Form","setTodos","todos","setStatus","setStars","completedNum","useState","input","setInput","pressedBtnAll","setPressedBtnAll","pressedBtnCom","setPressedBtnCom","pressedBtnUncom","setPressedBtnUncom","formHandler","e","preventDefault","Math","random","className","onSubmit","value","onChange","target","placeholder","type","emptySymbol","xlinkHref","fullSymbol","quiet","initialRating","stop","onClick","length","Errand","todo","num","setCompletedNum","editing","setEditing","newText","setNewText","useEffect","completedTodos","filter","item","confirmHandler","map","onDoubleClick","ErrandList","filteredTodos","index","App","setFilteredTodos","status","dark","setDark","localStorage","getItem","setItem","JSON","stringify","parse","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.9d249dd4.chunk.js","sourcesContent":["export const exampleData = \n  [\n    {text: \"健身 🏋️‍♀️\", completed: false, id: 1, stars: 1},\n    {text: \"作品集更新\", completed: true, id: 2, stars: 2},\n    {text: \"買村上春樹新書\", completed: false, id: 3, stars: 1},\n    {text: \"瞭解 JQBX 怎麼用\", completed: true, id: 4, stars: 1},\n    {text: \"買紅酒燉牛肉食材\", completed: true, id: 5, stars: 3},\n    {text: \"學習 React\", completed: false, id: 6, stars: 3},\n    {text: \"遛狗 🐶\", completed: false, id: 7, stars: 2}\n  ]","import React, {useState} from 'react';\nimport Rating from 'react-rating';\n\nconst Form = ({setTodos, todos, setStatus, setStars, stars, completedNum}) => {\n\n  const [input, setInput] = useState('')\n  const [pressedBtnAll, setPressedBtnAll] = useState(true);\n  const [pressedBtnCom, setPressedBtnCom] = useState(false);\n  const [pressedBtnUncom, setPressedBtnUncom] = useState(false);\n\n\n  const inputHandler = (e) => {\n    setInput(e.target.value);\n  }\n\n  const formHandler = (e) => {\n    e.preventDefault();\n    setTodos([...todos, {text: input, completed: false, id: Math.random() * 1000, stars: stars}])\n    setInput('');\n  }\n\n  const allHandler = () => {\n    setStatus(\"all\");\n    setPressedBtnAll(true);\n    setPressedBtnCom(false);\n    setPressedBtnUncom(false);\n  }\n\n  const completedHandler = () => {\n    setStatus(\"completed\");\n    setPressedBtnCom(true);\n    setPressedBtnAll(false);\n    setPressedBtnUncom(false);\n  }\n\n  const uncompletedHandler = () => {\n    setStatus(\"uncompleted\");\n    setPressedBtnUncom(true);\n    setPressedBtnCom(false);\n    setPressedBtnAll(false);\n  }\n\n  const starHandler = (value) => {\n    setStars(value);\n  }\n\n  return(\n    <div className=\"form__container\">\n      <form className=\"form__addbar\" onSubmit={formHandler}>\n        <div className=\"form__input-rating\">\n          <input className=\"form__input\" \n              value={input}\n              onChange={inputHandler}\n              placeholder=\"輸入事項\"\n              type=\"text\"></input>\n          <div className=\"form__rating\">\n            <Rating\n              emptySymbol={<svg><use xlinkHref=\"images/sprite.svg#icon-star-outlined\"></use></svg>}\n              fullSymbol={<svg><use xlinkHref=\"images/sprite.svg#icon-star\"></use></svg>}\n              quiet={true}\n              initialRating={1}\n              stop={3}\n              onClick={starHandler} />\n          </div>\n        </div>\n        <div className=\"form__submit-btn\" onClick={formHandler} type=\"submit\">\n          <p>&#43;</p>\n        </div>\n      </form>\n      <div className=\"form__filter\">\n        <div className={pressedBtnAll?\"form__filter-all--pressed\": \"form__filter-all\"} onClick={allHandler}>\n          <p>全部 {todos.length}</p>\n        </div>\n        <div className={pressedBtnCom?\"form__filter-com--pressed\": \"form__filter-com\"} onClick={completedHandler}>\n          <p>已完成 {completedNum}</p>\n        </div>\n        <div className={pressedBtnUncom?\"form__filter-uncom--pressed\": \"form__filter-uncom\"} onClick={uncompletedHandler}>\n          <p>未完成 {todos.length - completedNum}</p>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Form;","import React, {useState, useEffect} from 'react';\nimport Rating from 'react-rating';\n\nconst Errand = ({todo, todos, setTodos, num, stars, setCompletedNum}) => {\n\n  const [editing, setEditing] = useState(false);\n  const [newText, setNewText] = useState('');\n\n  // 計算已完成 errand 的數量\n  useEffect(() => {\n    const completedTodos = todos.filter(item => {\n      return item.completed === true;\n    })\n    setCompletedNum(completedTodos.length);\n  }, [todos, setCompletedNum])\n\n  // 標註 errand 已完成\n  const doneHandler = () => {\n    setTodos(todos.map(item => {\n      if(item.id === todo.id) {\n        return {\n          ...item, completed: !item.completed\n        }\n      }\n      return item\n    }))\n  }\n\n  // 刪除：errand\n  const removeHandler = () => {\n    setTodos(todos.filter(item => item.id !== todo.id))\n  }\n\n  // 編輯：errand 狀態\n  const editHandler = () => {\n    setEditing(!editing);\n  }\n\n  // 編輯：errand 內容\n  const newInputHandler = (e) => {\n    setNewText(e.target.value);\n  }\n\n  // 編輯：errand 內容確定發送\n  const confirmHandler = (e) => {\n    setTodos(\n      todos.map((item) => {\n        if(item.id === todo.id) {\n          return {\n            ...item, text: newText\n          }\n        }\n        return item\n      })\n    )\n    setEditing(false);\n  }\n\n  // 編輯：errand 取消編輯\n  const cancleHandler = () => {\n    setEditing(false);\n  }\n\n  // 編輯：星星數量\n  const starHandler = (value) => {\n    setTodos(\n      todos.map((item) => {\n        if(item.id === todo.id) {\n          return {\n            ...item, stars: value\n          }\n        }\n        return item\n      })\n    )\n  }\n\n  return(\n    <div className=\"errand__container\">\n      {editing\n      ? // 在編輯中\n        <form className=\"errand__editing\" onSubmit={confirmHandler}>\n          <p className={todo.completed? \"errand__completed--num errand__num\" : \"errand__num\"}>{num + 1}</p>\n          <div className=\"errand__editing-input\">\n            <input onDoubleClick={confirmHandler} type=\"text\" value={newText} placeholder={todo.text} onChange={newInputHandler}></input>\n          </div>\n          <div className=\"errand__editing-btns\">\n            <div onClick={confirmHandler} type=\"submit\">\n              <svg><use xlinkHref=\"images/sprite.svg#icon-check\"></use></svg>\n            </div>\n            <div onClick={cancleHandler}>\n              <svg><use xlinkHref=\"images/sprite.svg#icon-cross\"></use></svg>\n            </div>\n          </div>\n        </form>\n      :  // 沒有在編輯\n      <div className=\"errand__notediting\">\n        <div className=\"errand__stars\">\n        <Rating\n            emptySymbol={<svg><use xlinkHref=\"images/sprite.svg#icon-star-outlined\"></use></svg>}\n            fullSymbol={<svg><use xlinkHref=\"images/sprite.svg#icon-star\"></use></svg>}\n            quiet={true}\n            stop={3}\n            initialRating={stars}\n            onClick={starHandler}/>\n        </div>\n        <div className=\"errand__notediting-content\" onClick={doneHandler}>\n          <p className={todo.completed? \"errand__completed--num errand__num\" : \"errand__num\"}>{num + 1}</p>\n          <p className={todo.completed? \"errand__completed--text\" : \"\"}>{todo.text}</p>\n        </div>\n        <div className=\"errand__notediting-btns\">\n          <div onClick={editHandler}>\n            <svg><use xlinkHref=\"images/sprite.svg#icon-pencil\"></use></svg>\n          </div>\n          <div onClick={removeHandler}>\n            <svg><use xlinkHref=\"images/sprite.svg#icon-cup\"></use></svg>\n          </div>\n        </div>\n      </div>\n      }\n    </div>\n  )\n}\n\nexport default Errand;","import React from 'react';\nimport Errand from './Errand';\n\nconst ErrandList = ({todos, setTodos, filteredTodos, setCompletedNum}) => {\n\n  return (\n    <div className=\"errandlist__container\">\n      {filteredTodos.map((todo, index) => \n        <Errand\n          key={todo.id}\n          todo={todo}\n          todos={todos}\n          setTodos={setTodos}\n          num={index}\n          stars={todo.stars}\n          setCompletedNum={setCompletedNum}/>\n      )}\n    </div>\n  )\n} \n\nexport default ErrandList;","import React, {useState, useEffect} from 'react';\nimport { exampleData } from './ExampleData';\nimport Form from './Form';\nimport ErrandList from './ErrandList';\n\nconst App = () => {\n\n  const [todos, setTodos] = useState([]);\n  const [filteredTodos, setFilteredTodos] = useState([]);\n  const [status, setStatus] = useState('');\n  const [stars, setStars] = useState(1);\n  const [completedNum, setCompletedNum] = useState(0);\n  const [dark, setDark] = useState(false);\n\n  // 最一開始預先設定範例資料\n  useEffect(()=> {\n    setTodos(exampleData);\n  }, [setTodos])\n\n  useEffect(() => {\n    if (localStorage.getItem(\"todos\") === null) {\n      localStorage.setItem(\"todos\", JSON.stringify([]));\n    } else {\n      setTodos(JSON.parse(localStorage.getItem(\"todos\")));\n    }\n  }, [])\n\n  useEffect(() => {\n    const filter = () => {\n      if(status === 'completed') {\n        setFilteredTodos(todos.filter(item => item.completed === true))\n      } else if(status === 'uncompleted') {\n        setFilteredTodos(todos.filter(item => item.completed === false))\n      } else {\n        setFilteredTodos(todos)\n      }\n    }\n    filter();\n\n    const saveLocal = () => {\n      localStorage.setItem(\"todos\", JSON.stringify(todos))\n    }\n    saveLocal();\n  }, [status, todos])\n\n  // 黑暗模式開關\n  const themeHandler = () => {\n    setDark(!dark);\n  }\n\n  return(\n    <div className={'theme ' + (dark ? 'theme--dark' : 'theme--default')}>\n      <div className=\"app__background\">\n        <div className=\"app__container\">\n          <input className=\"app__color-switch\" onClick={themeHandler} type=\"checkbox\"/>\n          <h1 className=\"app__header\">待辦事項</h1>\n          <Form setTodos={setTodos} todos={todos} setStatus={setStatus} setStars={setStars} stars={stars} completedNum={completedNum}/>\n          <ErrandList todos={todos} setTodos={setTodos} filteredTodos={filteredTodos} stars={stars} setCompletedNum={setCompletedNum}/>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <App/>,\n  document.querySelector('#root')\n)"],"sourceRoot":""}